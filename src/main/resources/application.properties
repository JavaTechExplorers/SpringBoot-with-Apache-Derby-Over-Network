# By default Spring Boot will look for a property file in the package root directory called 'application.properties', this is a good place to customize your application. 
# For example, as we have placed mysql connector jar in the pom.xml file, Spring Boot will look for mysql specific properties in this file. 
# By Maven conventions, place this file into the src/main/resources directory so your build artefacts will be generated correctly. 

# Replace with your connection string
spring.datasource.url=jdbc:derby://localhost:1527/F:/apache-derby-db-instance/firstdb1;create=true
spring.datasource.username=test1
spring.datasource.password=pass1
spring.datasource.initialize=false
spring.datasource.driver-class-name=org.apache.derby.jdbc.ClientDriver
# spring.datasource.driverClassName=org.apache.derby.jdbc.ClientDriver

# Show or not log for each sql query
spring.jpa.show-sql=true
# spring.jpa.database=default
# spring.jpa.generate-ddl=true

# Hibernate ddl auto (create, create-drop, update): with "create-drop" the database
# schema will be automatically created afresh for every start of application
# spring.jpa.hibernate.ddl-auto=update

# Allows Hibernate to generate SQL optimized for a particular DBMS
# spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.DerbyDialect
